<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>nginx安装</title>
      <link href="/lpf.github.io/2020/04/19/nginx%E5%AE%89%E8%A3%85/"/>
      <url>/lpf.github.io/2020/04/19/nginx%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p>nginx 是一款高并发的轻量级web代理服务器，它可以运行在Linux,Windows,Mac OS等操作系统上。</p><h2 id="一、安装在linux"><a href="#一、安装在linux" class="headerlink" title="一、安装在linux"></a>一、安装在linux</h2><h3 id="（1）CentOS-安装"><a href="#（1）CentOS-安装" class="headerlink" title="（1）CentOS 安装"></a>（1）CentOS 安装</h3><h4 id="yum工具安装（适合业务简单，初学者）"><a href="#yum工具安装（适合业务简单，初学者）" class="headerlink" title="yum工具安装（适合业务简单，初学者）"></a>yum工具安装（适合业务简单，初学者）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install nginx -y  // 安装nginx</span><br><span class="line">yum remove nginx   // 卸载nginx</span><br></pre></td></tr></table></figure><p>设置nginx开机自启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl  enable  nginx.service</span><br><span class="line">systemctl  restart  nginx.service</span><br></pre></td></tr></table></figure><p> 设置开启防火墙</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=80/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p> 注：centOS  一般默认都是安装了yum，运行yum –version 查看nginx,如果没有安装，需要去安装一下</p><h4 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h4><blockquote><p>源码安装的话，就要格外注意了，在安装之前需要安装nginx 需要的依赖，我们默认一些依赖库已经安装，安装过程中缺什么，装什么就可以了。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 安装依赖</span><br><span class="line">yum -y install pcre-devel</span><br><span class="line">yum -y install openssl openssl-devel</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 安装步骤</span><br><span class="line"># 首先创建/var/nginx目录，可以自定义</span><br><span class="line">cd /var/nginx  </span><br><span class="line"></span><br><span class="line"># 源码download  #http://nginx.org/download   (.zip是window安装包 .tar.gzlinux 安装包)</span><br><span class="line">wget http://nginx.org/download/nginx-1.9.10.tar.gz </span><br><span class="line"></span><br><span class="line"># 解压nginx安装码压缩包</span><br><span class="line">tar zxvf nginx-1.9.10.tar.gz</span><br><span class="line">cd nginx-1.9.10</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"># 安装完成后(没有指定安装目录的话，查找nginx可执行文件)</span><br><span class="line">whereis nginx</span><br><span class="line"></span><br><span class="line"># nginx可执行文件在/usr/local/nginx/sbin/nginx  将nginx添加环境变量(软连接方式)</span><br><span class="line">ln -s /usr/local/nginx/sbin/nginx /usr/bin/nginx</span><br><span class="line"></span><br><span class="line"># 启动</span><br><span class="line">nginx</span><br></pre></td></tr></table></figure><h3 id="（2）utuntu-安装"><a href="#（2）utuntu-安装" class="headerlink" title="（2）utuntu 安装"></a>（2）utuntu 安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install nginx</span><br></pre></td></tr></table></figure><h2 id="二、安装在window"><a href="#二、安装在window" class="headerlink" title="二、安装在window"></a>二、安装在window</h2><p>（1）下载安装包 <a href="http://nginx.org/download/（zip安装包为window安装包）" target="_blank" rel="noopener">http://nginx.org/download/（zip安装包为window安装包）</a></p><p>（2）解压，找到exe文件<img src="C:%5CUsers%5Cuser%5CDesktop%5C%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE%5Cnginx-win.png" alt="nginx-win"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">conf   nginx 配置文件</span><br><span class="line"></span><br><span class="line">html  nginx默认访问的html文件</span><br><span class="line"></span><br><span class="line">logs  日志文件（错误日志，访问日志）</span><br></pre></td></tr></table></figure><p>（3）cmd  nginx当前所在的目录</p><p>相关命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cd C:\Users\user\Downloads\nginx-1.16.1</span><br><span class="line"># 查看版本</span><br><span class="line">nginx.exe -v</span><br><span class="line"># 启动</span><br><span class="line">start nginx 或  nginx.exe</span><br><span class="line"># 打开浏览器，输入http://localhost</span><br><span class="line"># 停止</span><br><span class="line">nginx.exe -s stop  或  nginx.exe -s quit</span><br><span class="line"># 重启</span><br><span class="line">nginx.exe -s reload</span><br><span class="line"># 重新打开日志文件</span><br><span class="line">nginx.exe -s reopen</span><br></pre></td></tr></table></figure><p>注：nginx在win性能较差，所以win仅仅用来体验学习就好。</p><h2 id="三、docker-安装nginx"><a href="#三、docker-安装nginx" class="headerlink" title="三、docker 安装nginx"></a>三、docker 安装nginx</h2><blockquote><p>docker 用来部署nginx也很简单，几行命令就可以搞定。</p></blockquote><p>（1) 安装docker ,如果不会的话，点击学习<a href="https://www.runoob.com/docker/centos-docker-install.html" target="_blank" rel="noopener">https://www.runoob.com/docker/centos-docker-install.html</a></p><p>（2）docker  run -d -p 80:80 nginx     </p><p>（3）docker   ps   </p><p>（4）比如服务器地址为123.12.2.2，打开浏览器访问 <a href="http://123.12.2.2" target="_blank" rel="noopener">http://123.12.2.2</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo搭建个人博客</title>
      <link href="/lpf.github.io/2020/04/19/hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/lpf.github.io/2020/04/19/hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>从零开始搭建hexo,这是入门篇，主要介绍下hexo的初始化项目，之后慢慢记录hexo的进阶。</p><h2 id="一、初始化项目"><a href="#一、初始化项目" class="headerlink" title="一、初始化项目"></a>一、初始化项目</h2><p>安装node</p><p><code>node -v</code></p><p>安装hexo</p><p><code>npm install hexo -g</code></p><p>初始化项目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">hexo serve  //运行</span><br></pre></td></tr></table></figure><p>其他指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 生成新的文章</span><br><span class="line">hexo new &quot;new passage&quot;</span><br><span class="line">// 生成html文件</span><br><span class="line">hexo generate</span><br><span class="line">// 部署远程服务器</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><h2 id="二、部署github"><a href="#二、部署github" class="headerlink" title="二、部署github"></a>二、部署github</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git -S</span><br><span class="line">hexo clean</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>_config.yml配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: &lt;你的仓库地址&gt; # https://github.com/TJ-XiaJiaHao/TJ-XiaJiaHao.github.io</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>访问站点<br>github pages 设置</p><p><a href="https://richlpf.github.io/lpf.github.io/index.html" target="_blank" rel="noopener">https://richlpf.github.io/lpf.github.io/index.html</a><br>注意：<br>1、后面要加上index.html,访问首页<br>2、可以拉取代码，配置访问二级目录</p><h2 id="三、安装问题"><a href="#三、安装问题" class="headerlink" title="三、安装问题"></a>三、安装问题</h2><p>静态资源无法加载问题</p><p><a href="https://blog.csdn.net/weixin_44474742/article/details/97271608" target="_blank" rel="noopener">https://blog.csdn.net/weixin_44474742/article/details/97271608</a></p><p>hexo deploy 上传超时 问题</p><p>git config –global credential.helper store</p><h2 id="四、插件系列"><a href="#四、插件系列" class="headerlink" title="四、插件系列"></a>四、插件系列</h2><p>package.json</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&quot;dependencies&quot;: &#123;</span><br><span class="line">    &quot;hexo&quot;: &quot;^3.9.0&quot;,</span><br><span class="line">    &quot;hexo-deployer-git&quot;: &quot;^2.1.0&quot;,</span><br><span class="line">    &quot;hexo-generator-archive&quot;: &quot;^0.1.5&quot;,</span><br><span class="line">    &quot;hexo-generator-category&quot;: &quot;^0.1.3&quot;,</span><br><span class="line">    &quot;hexo-generator-feed&quot;: &quot;^2.2.0&quot;,</span><br><span class="line">    &quot;hexo-generator-index&quot;: &quot;^0.2.1&quot;,</span><br><span class="line">    &quot;hexo-generator-json-content&quot;: &quot;2.2.0&quot;,</span><br><span class="line">    &quot;hexo-generator-search&quot;: &quot;^2.4.0&quot;,</span><br><span class="line">    &quot;hexo-generator-tag&quot;: &quot;^0.2.0&quot;,</span><br><span class="line">    &quot;hexo-renderer-ejs&quot;: &quot;^0.3.1&quot;,</span><br><span class="line">    &quot;hexo-renderer-jade&quot;: &quot;^0.3.0&quot;,</span><br><span class="line">    &quot;hexo-renderer-marked&quot;: &quot;^2.0.0&quot;,</span><br><span class="line">    &quot;hexo-renderer-stylus&quot;: &quot;^0.3.3&quot;,</span><br><span class="line">    &quot;hexo-server&quot;: &quot;^0.3.3&quot;,</span><br><span class="line">    &quot;hexo-wordcount&quot;: &quot;^6.0.1&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>插入音乐或视频</p></blockquote><p><a href="https://mp.weixin.qq.com/s?__biz=MzU3MDI4NTM5Mg==&amp;mid=2247485106&amp;idx=3&amp;sn=50a8681007d7b82a29c92e70110fff1d&amp;chksm=fcf08a8dcb87039b272837b9db33f54db6bed8f3401f7d65f6caf9cec28edb1119fdfee82d41&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MzU3MDI4NTM5Mg==&amp;mid=2247485106&amp;idx=3&amp;sn=50a8681007d7b82a29c92e70110fff1d&amp;chksm=fcf08a8dcb87039b272837b9db33f54db6bed8f3401f7d65f6caf9cec28edb1119fdfee82d41&amp;scene=21#wechat_redirect</a></p><blockquote><p>搜索功能</p></blockquote><blockquote><p>自定义404页面</p></blockquote><p><a href="https://mp.weixin.qq.com/s?__biz=MzU3MDI4NTM5Mg==&amp;mid=2247485262&amp;idx=3&amp;sn=3e2aff5d7fb4979ca70d275bae48525f&amp;chksm=fcf08b71cb870267c972b11b1e5f0c345af39170c756de170adde8e70532360a68debcb0b3c4&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MzU3MDI4NTM5Mg==&amp;mid=2247485262&amp;idx=3&amp;sn=3e2aff5d7fb4979ca70d275bae48525f&amp;chksm=fcf08b71cb870267c972b11b1e5f0c345af39170c756de170adde8e70532360a68debcb0b3c4&amp;scene=21#wechat_redirect</a></p><blockquote><p>百度seo</p></blockquote><p>yarn add hexo-baidu-url-push</p><p><a href="https://www.jianshu.com/p/f37452d4978e" target="_blank" rel="noopener">https://www.jianshu.com/p/f37452d4978e</a></p><blockquote><p>文章字数，阅读时长统计</p></blockquote><p>hexo-wordcount</p><blockquote><p>评论功能</p></blockquote><p>leancloud-storage –save</p><blockquote><p>评论提醒</p></blockquote><p>gitalk 评论系统</p><p><a href="https://blog.csdn.net/qq_36537546/article/details/90730412" target="_blank" rel="noopener">https://blog.csdn.net/qq_36537546/article/details/90730412</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mongo备份数据</title>
      <link href="/lpf.github.io/2019/10/23/mongo%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE/"/>
      <url>/lpf.github.io/2019/10/23/mongo%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<p>mongo数据库的备份是必须要做的，这里记录下自己备份数据的脚本</p><h2 id="mongo备份脚本"><a href="#mongo备份脚本" class="headerlink" title="mongo备份脚本"></a>mongo备份脚本</h2><p><code>cat /data/backdb/back_up.sh</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">## declare an array variable</span><br><span class="line">declare -a db_arr=(</span><br><span class="line">&quot;testA&quot;</span><br><span class="line">&quot;testB&quot;</span><br><span class="line">)</span><br><span class="line">db_bk=/data/backdb/</span><br><span class="line"></span><br><span class="line">## now loop through the above array</span><br><span class="line">for i in &quot;$&#123;db_arr[@]&#125;&quot;</span><br><span class="line">do</span><br><span class="line">   echo &quot;start to dump &quot; $i</span><br><span class="line">   mongodump -h 192.168.0.1:20000 -d $i -o $db_bk</span><br><span class="line">   echo &quot;end&quot;</span><br><span class="line">   # or do whatever with individual element of the array</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h2 id="设置定时任务"><a href="#设置定时任务" class="headerlink" title="设置定时任务"></a>设置定时任务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chmod +x ./backup.sh</span><br><span class="line">crontab -l</span><br><span class="line">crontab -e</span><br><span class="line"></span><br><span class="line">40 22 * * * /data/lpf/test/backup.sh  //每天22点40执行脚本</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> mongo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql备份数据</title>
      <link href="/lpf.github.io/2019/10/23/mysql%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE/"/>
      <url>/lpf.github.io/2019/10/23/mysql%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<p>mysql数据库的备份是必须要做的，这里记录下自己备份数据的脚本</p><h2 id="mysql数据库备份"><a href="#mysql数据库备份" class="headerlink" title="mysql数据库备份"></a>mysql数据库备份</h2><p>cat /data/db/backup.sh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">db_arr=(</span><br><span class="line">    &quot;web&quot;</span><br><span class="line">    &quot;test&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">for i in &quot;$&#123;db_arr[@]&#125;&quot;</span><br><span class="line">do</span><br><span class="line">    echo &quot;start to dump&quot; $i</span><br><span class="line">    docker exec -it docker-mysql[docker_container_id/docker_name] mysqldump -h 120.132.26.176 -uroot -p[password] --databases web &gt; /data/backdb/`date &quot;+%Y%m%d&quot;`web.sql</span><br><span class="line">    echo &quot;end to dump $&#123;db_arr[$i]&#125;&quot;</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h2 id="定时脚本"><a href="#定时脚本" class="headerlink" title="定时脚本"></a>定时脚本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /data/db/backup.sh</span><br><span class="line">crontab -l</span><br><span class="line">crontab -e</span><br><span class="line"></span><br><span class="line">40 22 * * * /data/db/backup.sh  //每天22点40执行脚本</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
