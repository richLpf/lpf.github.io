<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>mongo备份数据</title>
      <link href="/lpf.github.io/2019/10/23/mongo%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE/"/>
      <url>/lpf.github.io/2019/10/23/mongo%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<p><code>crontab -l</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">返回：</span><br><span class="line"></span><br><span class="line">1 */4 * * * /data/backdb/back_up.sh &gt;/dev/null &gt;&amp;2</span><br></pre></td></tr></table></figure><p><code>cat /data/backdb/back_up.sh</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">## declare an array variable</span><br><span class="line">declare -a db_arr=(</span><br><span class="line">&quot;securitybug&quot;</span><br><span class="line">&quot;securitybugv2&quot;</span><br><span class="line">&quot;umanager&quot;</span><br><span class="line">)</span><br><span class="line">db_bk=/data/backdb/backup</span><br><span class="line"></span><br><span class="line">## now loop through the above array</span><br><span class="line">for i in &quot;$&#123;db_arr[@]&#125;&quot;</span><br><span class="line">do</span><br><span class="line">   echo &quot;start to dump &quot; $i</span><br><span class="line">   mongodump -h 172.28.196.75:20000 -d $i -o $db_bk</span><br><span class="line">   echo &quot;end&quot;</span><br><span class="line">   # or do whatever with individual element of the array</span><br><span class="line">done</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chmod +x ./backup.sh</span><br><span class="line">crontab -l</span><br><span class="line">crontab -e</span><br><span class="line"></span><br><span class="line">40 22 * * * /data/lpf/test/backup.sh  //每天22点40执行脚本</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>mysql备份数据</title>
      <link href="/lpf.github.io/2019/10/23/mysql%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE/"/>
      <url>/lpf.github.io/2019/10/23/mysql%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="mysql数据库备份"><a href="#mysql数据库备份" class="headerlink" title="mysql数据库备份"></a>mysql数据库备份</h2><p><strong>backup.sh</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">db_arr=(</span><br><span class="line">    &quot;web&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">for i in &quot;$&#123;db_arr[@]&#125;&quot;</span><br><span class="line">do</span><br><span class="line">    echo &quot;start to dump&quot; $i</span><br><span class="line">    docker exec -it docker-mysql[docker_container_id/docker_name] mysqldump -h 120.132.26.176 -uroot -p[password] --databases web &gt; /data/backdb/`date &quot;+%Y%m%d&quot;`web.sql</span><br><span class="line">    echo &quot;end to dump $&#123;db_arr[$i]&#125;&quot;</span><br><span class="line">done</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chmod +x ./backup.sh</span><br><span class="line">crontab -l</span><br><span class="line">crontab -e</span><br><span class="line"></span><br><span class="line">40 22 * * * /data/lpf/test/backup.sh  //每天22点40执行脚本</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/lpf.github.io/2019/10/23/hello-world/"/>
      <url>/lpf.github.io/2019/10/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="网站定位，解决问题的能力，各种场景的解决办法"><a href="#网站定位，解决问题的能力，各种场景的解决办法" class="headerlink" title="网站定位，解决问题的能力，各种场景的解决办法"></a>网站定位，解决问题的能力，各种场景的解决办法</h3><p>从系统开发的过程中，遇到的各种常见问题的解决方法。</p><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>干法</title>
      <link href="/lpf.github.io/2019/10/16/%E5%B9%B2%E6%B3%95/"/>
      <url>/lpf.github.io/2019/10/16/%E5%B9%B2%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>16进步最快的方法，就是复盘。</p><p>这个世界上的事情往往很奇妙，你说复杂，他也很简单，简单到人、物、事，复杂到这个世界的种种。</p><p>生活不易，却殊途同归。</p><p>在看稻盛和夫的《干法》，有感而发，故而记录。以防止过去常常遇到的读书过程中有什么想法，却在书读完那一刻，做到了张无忌学习太极剑的境界。</p><p>说来惭愧，之前不知道稻盛和夫这个人，仅仅对日本 松下电器有所耳闻，读这本书的契机是：公司组织学习读书会。听了樊登对于这本书的讲解。让我对这本书有了初步的认识。也许听上去可能是我被打了鸡血，但我深深的认识到，不是这样的。</p><p>在看这本书之前，我看过《小狗钱钱》，《王阳明》。为什么说这两本书呢？小狗钱钱中那个小女孩，最开始通过遛狗赚钱，到后来认识到小狗主人，在小狗主人和他表哥的帮助下，慢慢的建立自己的赚钱之路。王阳明是明代的大思想家，军事家，创建了心学，带过军队平乱。提出的知行合一思想，是我很佩服的哲学，可以说王阳明是一个理论+实践家。</p><p>而这本书仅仅在序言部分，我读到了作者发扬稻盛和精神的极致。从2001年10月份，译本作者见到稻盛和夫的那一刻，同年12月份到他的公司拜访，接着一发不可收拾，订购他的杂志，读稻盛和夫，写稻盛和夫，译稻盛和夫的n本书，就这样一步一步的和他合作，走上自己的道路。热爱，是成功必备的前提，就像稻盛和夫一样，转变态度，热爱、深入自己的所做的事情，你会发现他的神奇，everything!!!</p><p>读这本书，有几点感觉很深刻：</p><p>一、改变工作的心态，疯狂的迷恋上工作。（关键你要去想）</p><p>稻盛和夫从刚开始厌恶工作，到爱上工作，也是强迫自己，到突然发现所从事职业的魅力，“极度认真，上天会眷顾你”。疯狂的爱上工作。</p><p>其实当前这个社会，要做到真的是太不容易了，种种诱惑，各种麻烦事，让你应接不暇。</p><p>但反过来说，各种条件便利，很多东西只要你着手去找，就会发现，其实并没有那么难，难得是你要有那份断舍离的思想，除了工作放弃其他的东西，不疯魔不成魔。</p><p>二、定高目标，每天想象成功的情景，付出不亚于任何人的努力 （关键你要去想）</p><p>就像《小狗钱钱》中，小狗教育小女孩，你要将自己的愿望写下来，然后收集明信片，贴在储钱罐上面，天天看，想象梦想达成的样子。看着目标，这样会提醒你时刻谨记自己的目标，排除干扰，让你不断为之努力。</p><p>这可能也是洗脑的可怕之处吧。当然武器没有好坏，只有人心有好坏，所有我们要把这种方法用在完成自己的事业上。当你实在不行的时候，梳理过去，重新开始，这就是你真正的开始。（无论无何也要让自己事业成功）</p><p>三、追求完美，“创造性”的工作。</p><p>这一点很重要，但其实我们都不容易做到，我曾经常常反思为什么。却无从下手，因为当前的技能已经足够你使用了。</p><p>就像你有一把扫帚，用习惯了，也不会想着去改变，何况很多时候你根本不知道已经有吸尘机、自动扫地机器人等。前一年给父母买了一个全自动洗衣机，但他们却放在一边，问起来是习惯了老式洗衣机。</p><p>总结以上的发现，你就会知道为什么，满足是创新的最大敌人。</p><p>那么怎么改变？不满足，持续不断的改造自己的工作，不断优化，自然就会去关注，去改进自己。思考为什么，这样做是为什么，是否可行。</p><p>四、每次只执行一个计划，如果不成功就不进行下一个</p><p>曾经我制订了很多的计划，但完成的寥寥无几，回顾一年很多时候发现自己能拿出手的作品几乎为零，看过了这边书，我将自己的计划变成了一个，进行下一个计划的前提是完成当前的工作。</p><p>五、做个好人（思维 * 热情 * 能力）动机至善、私信了无。</p><p>– 读《干法》</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>golang基础类型</title>
      <link href="/lpf.github.io/2019/10/15/golang%E5%9F%BA%E7%A1%80%E7%B1%BB%E5%9E%8B/"/>
      <url>/lpf.github.io/2019/10/15/golang%E5%9F%BA%E7%A1%80%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h2><ul><li><p>centos</p><ul><li><a href="yum">yum</a></li><li>源码</li></ul></li><li><p>ubuntu</p></li><li><p>window</p></li><li><p>docker</p></li></ul><h2 id="一、安装在linux"><a href="#一、安装在linux" class="headerlink" title="一、安装在linux"></a>一、安装在linux</h2><blockquote><p>我们默认一些依赖库已经安装，安装过程中缺什么，装什么就可以了。</p></blockquote><p>yumCentOS 安装</p><pre><code>yum 安装    </code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install nginx -y  // 安装nginx</span><br><span class="line"></span><br><span class="line">yum remove nginx   // 卸载nginx</span><br></pre></td></tr></table></figure><p>​    设置nginx开机自启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl  enable  nginx.service</span><br><span class="line">systemctl  restart  nginx.service</span><br></pre></td></tr></table></figure><pre><code>设置开启防火墙</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=80/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>​     <a name="yum">注：centOS  一般默认都是安装了yum，运行yum –version 查看nginx,如果没有安装，需要去安装一下</a></p><h4 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h4><blockquote><p>源码安装的话，就要格外注意了，在安装之前需要安装nginx 需要的依赖</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 安装依赖</span><br><span class="line">yum -y install pcre-devel</span><br><span class="line">yum -y install openssl openssl-devel</span><br></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装步骤</span></span><br><span class="line"><span class="comment"># 首先创建/var/nginx目录，随你定</span></span><br><span class="line"><span class="attribute">cd</span> /var/nginx  </span><br><span class="line"><span class="comment"># 源码download  #http://nginx.org/download   (.zip是window安装包 .tar.gzlinux 安装包)</span></span><br><span class="line">wget http://nginx.org/download/nginx-1.9.10.tar.gz  </span><br><span class="line"><span class="comment"># 解压nginx安装码压缩包</span></span><br><span class="line">unzip nginx-<span class="number">1</span>.<span class="number">9</span>.<span class="number">10</span>.zip  // unzip 可用yum install unzip zip -y 安装 </span><br><span class="line">cd  nginx-<span class="number">1</span>.<span class="number">9</span>.<span class="number">10</span></span><br><span class="line">tar zxvf nginx-<span class="number">1</span>.<span class="number">9</span>.<span class="number">10</span>.tar.gz</span><br><span class="line">cd nginx-<span class="number">1</span>.<span class="number">9</span>.<span class="number">10</span></span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="comment"># 安装完成后(没有指定安装目录的话，查找nginx可执行文件)</span></span><br><span class="line">whereis nginx</span><br><span class="line"><span class="comment"># nginx可执行文件在/usr/local/nginx/sbin/nginx  将nginx添加环境变量(软连接方式)</span></span><br><span class="line">ln -s /usr/local/nginx/sbin/nginx /usr/bin/nginx</span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">nginx</span><br></pre></td></tr></table></figure><h3 id="（2）utuntu-安装"><a href="#（2）utuntu-安装" class="headerlink" title="（2）utuntu 安装"></a>（2）utuntu 安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install nginx</span><br><span class="line"># 即可安装完毕</span><br></pre></td></tr></table></figure><h2 id="二、安装在window"><a href="#二、安装在window" class="headerlink" title="二、安装在window"></a>二、安装在window</h2><p>（1）下载安装包 <a href="http://nginx.org/download/（zip安装包为window安装包）" target="_blank" rel="noopener">http://nginx.org/download/（zip安装包为window安装包）</a></p><p>（2）解压，找到exe文件<img src="C:%5CUsers%5Cuser%5CDesktop%5C%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE%5Cnginx-win.png" alt="nginx-win"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">conf   nginx 配置文件</span><br><span class="line"></span><br><span class="line">html  nginx默认访问的html文件</span><br><span class="line"></span><br><span class="line">logs  日志文件（错误日志，访问日志）</span><br></pre></td></tr></table></figure><p>（3）cmd  nginx当前所在的目录</p><p>相关命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cd C:\Users\user\Downloads\nginx-1.16.1</span><br><span class="line"># 查看版本</span><br><span class="line">nginx.exe -v</span><br><span class="line"># 启动</span><br><span class="line">start nginx 或  nginx.exe</span><br><span class="line"># 打开浏览器，输入http://localhost</span><br><span class="line"># 停止</span><br><span class="line">nginx.exe -s stop  或  nginx.exe -s quit</span><br><span class="line"># 重启</span><br><span class="line">nginx.exe -s reload</span><br><span class="line"># 重新打开日志文件</span><br><span class="line">nginx.exe -s reopen</span><br></pre></td></tr></table></figure><p>注：nginx在win性能较差，所以win仅仅用来体验学习就好。</p><h2 id="三、docker-安装nginx"><a href="#三、docker-安装nginx" class="headerlink" title="三、docker 安装nginx"></a>三、docker 安装nginx</h2><blockquote><p>docker 用来部署nginx也很简单，几行命令就可以搞定。</p></blockquote><p>（1) 安装docker ,如果不会的话，点击学习<a href="https://www.runoob.com/docker/centos-docker-install.html" target="_blank" rel="noopener">https://www.runoob.com/docker/centos-docker-install.html</a></p><p>（2）docker  run -d -p 80:80 nginx     </p><p>（3）docker   ps   </p><p>   (3)   比如服务器地址为123.12.2.2，打开浏览器访问 <a href="http://123.12.2.2" target="_blank" rel="noopener">http://123.12.2.2</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
