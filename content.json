[{"title":"nginx源码编译","date":"2020-04-20T16:14:06.000Z","path":"2020/04/21/nginx源码编译/","text":"nginx源码编译，通常会出现很多小问题，所以对nginx要求不高，配置比较简单，可以选择工具安装. 这里由centos为例用源码进行安装 服务器选择ucloud，购买请点击 nginx是由一个个模块组成的，有一些自带的模块和大量的第三方模块，也可以自行开发第三方模块。 一、前置工作安装一些nginx依赖的库 1234567891011121314yum install -y gcc //安装GCC...安装过程省略yum install -y gcc-c++ //安装C++库用来编译c++...安装过程省略yum install -y pcre pcre-devel //安装pcre库...安装过程省略yum install -y zlib zlib-devel //安装lib库...安装过程省略yum install -y openssl openssl-devel...安装过程省略 二、下载源码12345首先创建/var/nginx目录，可以自定义cd /var/nginx 源码download #http://nginx.org/download wget http://nginx.org/download/nginx-1.9.10.tar.gz nginx源码目录： auto：一些自动编译的脚本，配合configure使用 CHANGES：版本变化 CHANGES.ru：俄罗斯语言的版本变化 conf：nginx配置文件 configure：nginx安装编译文件 contrib 存放其他机构或组织贡献的代码 html：nginx配置root默认模块 LICENSE：许可文件 man：通过man ./nginx.8查看，nginx的帮助手册 README：说明文档地址 src：nginx主要的源码分布 nginx安装指令当前目录/var/nginx/nginx-1.9.10 1./configure --help 查看安装的一些参数 –prefix=PATH 设置nginx的安装路径 –sbin-path=PATH 设置环境变量的路径 –with-http_ssl_module 等是可以安装的模块 –without-http_charset_module 等是nginx自带的模块，加上该参数可以卸载 –add-module=PATH 添加第三方模块 三、安装步骤当前目录/var/nginx/nginx-1.9.10 1234567891011121314# 执行命令，配置不同的参数，具体参数见上面安装指令./configure --prefix=/usr/local/nginx # 编译make &amp;&amp; make install# 安装完成后(nginx在/usr/local/nginx中)whereis nginx# nginx可执行文件在/usr/local/nginx/sbin/nginx 将nginx添加环境变量(软连接方式)ln -s /usr/local/nginx/sbin/nginx /usr/bin/nginx# 启动nginx 四、常见问题(1) 安装报错12345678910111213141516checking for struct tm.tm_gmtoff ... foundchecking for struct dirent.d_namlen ... not foundchecking for struct dirent.d_type ... foundchecking for sysconf(_SC_NPROCESSORS_ONLN) ... foundchecking for openat(), fstatat() ... foundchecking for getaddrinfo() ... foundchecking for PCRE library ... not foundchecking for PCRE library in /usr/local/ ... not foundchecking for PCRE library in /usr/include/pcre/ ... not foundchecking for PCRE library in /usr/pkg/ ... not foundchecking for PCRE library in /opt/local/ ... not found./configure: error: the HTTP rewrite module requires the PCRE library.You can either disable the module by using --without-http_rewrite_moduleoption, or install the PCRE library into the system, or build the PCRE librarystatically from the source with nginx by using --with-pcre=&lt;path&gt; option. 解决办法 yum install pcre-devel 1./libtool: line 990: g++: command not found 解决办法 yum -y install gcc+ gcc-c++ (2) nginx启动报错 Starting nginx (via systemctl): Job for nginx.service failed because a configured resource limit was exceeded. See “systemctl status nginx.service” and “journalctl -xe” for details. Failed to start SYSV: Nginx is an HTTP(S) server, HTTP(S) reverse proxy and IMAP/POP3 proxy server. 解决办法： netstat -ntlp 查看在运行的nginx进程 kill -9 pid 杀死正在运行的nginx进程","tags":[]},{"title":"nginx安装","date":"2020-04-19T10:06:10.000Z","path":"2020/04/19/nginx安装/","text":"nginx 是一款高并发的轻量级web代理服务器，它可以运行在Linux,Windows,Mac OS等操作系统上。 一、安装在linux（1）CentOS 安装(yum)12yum install nginx -y // 安装nginxyum remove nginx // 卸载nginx 设置nginx开机自启动 12systemctl enable nginx.servicesystemctl restart nginx.service 设置开启防火墙 12firewall-cmd --zone=public --add-port=80/tcp --permanentfirewall-cmd --reload 注：centOS 一般默认都是安装了yum，运行yum –version 查看nginx,如果没有安装，需要去安装一下 （2）utuntu 安装（apt-get）12sudo apt-get updatesudo apt-get install nginx 二、安装在window（1）下载安装包 http://nginx.org/download/（zip安装包为window安装包） （2）解压，找到exe文件 12345conf nginx 配置文件html nginx默认访问的html文件logs 日志文件（错误日志，访问日志） （3）cmd nginx当前所在的目录 相关命令 123456789101112cd C:\\Users\\user\\Downloads\\nginx-1.16.1# 查看版本nginx.exe -v# 启动start nginx 或 nginx.exe# 打开浏览器，输入http://localhost# 停止nginx.exe -s stop 或 nginx.exe -s quit# 重启nginx.exe -s reload# 重新打开日志文件nginx.exe -s reopen 注：nginx在win性能较差，所以win仅仅用来体验学习就好。","tags":[{"name":"nginx","slug":"nginx","permalink":"http://yoursite.com/tags/nginx/"}]},{"title":"hexo搭建个人博客","date":"2020-04-19T04:11:34.000Z","path":"2020/04/19/hexo搭建个人博客/","text":"从零开始搭建hexo,这是入门篇，主要介绍下hexo的初始化项目，之后慢慢记录hexo的进阶。 一、初始化项目安装node node -v 安装hexo npm install hexo -g 初始化项目 12hexo inithexo serve //运行 其他指令 123456// 生成新的文章hexo new &quot;new passage&quot;// 生成html文件hexo generate// 部署远程服务器hexo deploy 二、部署github123npm install hexo-deployer-git -Shexo cleanhexo deploy _config.yml配置 12345## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: &lt;你的仓库地址&gt; # https://github.com/TJ-XiaJiaHao/TJ-XiaJiaHao.github.io branch: master 访问站点github pages 设置 https://richlpf.github.io/lpf.github.io/index.html注意：1、后面要加上index.html,访问首页2、可以拉取代码，配置访问二级目录 三、安装问题静态资源无法加载问题 https://blog.csdn.net/weixin_44474742/article/details/97271608 hexo deploy 上传超时 问题 git config –global credential.helper store 四、插件系列package.json 1234567891011121314151617&quot;dependencies&quot;: &#123; &quot;hexo&quot;: &quot;^3.9.0&quot;, &quot;hexo-deployer-git&quot;: &quot;^2.1.0&quot;, &quot;hexo-generator-archive&quot;: &quot;^0.1.5&quot;, &quot;hexo-generator-category&quot;: &quot;^0.1.3&quot;, &quot;hexo-generator-feed&quot;: &quot;^2.2.0&quot;, &quot;hexo-generator-index&quot;: &quot;^0.2.1&quot;, &quot;hexo-generator-json-content&quot;: &quot;2.2.0&quot;, &quot;hexo-generator-search&quot;: &quot;^2.4.0&quot;, &quot;hexo-generator-tag&quot;: &quot;^0.2.0&quot;, &quot;hexo-renderer-ejs&quot;: &quot;^0.3.1&quot;, &quot;hexo-renderer-jade&quot;: &quot;^0.3.0&quot;, &quot;hexo-renderer-marked&quot;: &quot;^2.0.0&quot;, &quot;hexo-renderer-stylus&quot;: &quot;^0.3.3&quot;, &quot;hexo-server&quot;: &quot;^0.3.3&quot;, &quot;hexo-wordcount&quot;: &quot;^6.0.1&quot;&#125; 插入音乐或视频 https://mp.weixin.qq.com/s?__biz=MzU3MDI4NTM5Mg==&amp;mid=2247485106&amp;idx=3&amp;sn=50a8681007d7b82a29c92e70110fff1d&amp;chksm=fcf08a8dcb87039b272837b9db33f54db6bed8f3401f7d65f6caf9cec28edb1119fdfee82d41&amp;scene=21#wechat_redirect 搜索功能 自定义404页面 https://mp.weixin.qq.com/s?__biz=MzU3MDI4NTM5Mg==&amp;mid=2247485262&amp;idx=3&amp;sn=3e2aff5d7fb4979ca70d275bae48525f&amp;chksm=fcf08b71cb870267c972b11b1e5f0c345af39170c756de170adde8e70532360a68debcb0b3c4&amp;scene=21#wechat_redirect 百度seo yarn add hexo-baidu-url-push https://www.jianshu.com/p/f37452d4978e 文章字数，阅读时长统计 hexo-wordcount 评论功能 leancloud-storage –save 评论提醒 gitalk 评论系统 https://blog.csdn.net/qq_36537546/article/details/90730412","tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"mongo备份数据","date":"2019-10-23T14:05:44.000Z","path":"2019/10/23/mongo备份数据/","text":"mongo数据库的备份是必须要做的，这里记录下自己备份数据的脚本 mongo备份脚本cat /data/backdb/back_up.sh 123456789101112131415## declare an array variabledeclare -a db_arr=( &quot;testA&quot; &quot;testB&quot;)db_bk=/data/backdb/## now loop through the above arrayfor i in &quot;$&#123;db_arr[@]&#125;&quot;do echo &quot;start to dump &quot; $i mongodump -h 192.168.0.1:20000 -d $i -o $db_bk echo &quot;end&quot; # or do whatever with individual element of the arraydone 设置定时任务12345chmod +x ./backup.shcrontab -lcrontab -e40 22 * * * /data/lpf/test/backup.sh //每天22点40执行脚本","tags":[{"name":"mongo","slug":"mongo","permalink":"http://yoursite.com/tags/mongo/"}]},{"title":"mysql备份数据","date":"2019-10-23T14:04:40.000Z","path":"2019/10/23/mysql备份数据/","text":"mysql数据库的备份是必须要做的，这里记录下自己备份数据的脚本 mysql数据库备份cat /data/db/backup.sh 123456789101112#!/bin/shdb_arr=( &quot;web&quot; &quot;test&quot;)for i in &quot;$&#123;db_arr[@]&#125;&quot;do echo &quot;start to dump&quot; $i docker exec -it docker-mysql[docker_container_id/docker_name] mysqldump -h 120.132.26.176 -uroot -p[password] --databases web &gt; /data/backdb/`date &quot;+%Y%m%d&quot;`web.sql echo &quot;end to dump $&#123;db_arr[$i]&#125;&quot;done 定时脚本12345chmod +x /data/db/backup.shcrontab -lcrontab -e40 22 * * * /data/db/backup.sh //每天22点40执行脚本","tags":[{"name":"mysql","slug":"mysql","permalink":"http://yoursite.com/tags/mysql/"}]}]